"""
Django settings for apis_ontology project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import re
import dj_database_url
import os

from pathlib import Path
from apis_acdhch_default_settings.settings import *

# General Django settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
DEV_VERSION = False

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "frischmuth-dev.acdh-dev.oeaw.ac.at",
]

ALLOWED_HOSTS = re.sub(
    r"https?://",
    "",
    os.environ.get("ALLOWED_HOSTS", ",".join(ALLOWED_HOSTS)),
).split(",")

# Application definition

ROOT_URLCONF = "apis_ontology.urls"

WSGI_APPLICATION = "apis_ontology.wsgi.application"

# Django Allow CIDR
# see https://github.com/mozmeao/django-allow-cidr
# address '10.0.0.0/8' needs to be allowed for service health checks

ALLOWED_CIDR_NETS = ["10.0.0.0/8", "127.0.0.0/8"]

# Django REST framework permissions
# see https://www.django-rest-framework.org/api-guide/permissions/


REST_FRAMEWORK[
    "DEFAULT_PERMISSION_CLASSES"
] = "rest_framework.permissions.IsAuthenticated"

# drf-spectacular
# see https://drf-spectacular.readthedocs.io/en/latest/settings.html

SPECTACULAR_SETTINGS["COMPONENT_SPLIT_REQUEST"] = True
SPECTACULAR_SETTINGS["COMPONENT_NO_READ_ONLY_REQUIRED"] = True


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {"default": dj_database_url.config(conn_max_age=600)}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "de"

TIME_ZONE = "CET"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# APIS app-specific settings

# APIS_BASE_URI is used to construct URIs to resources (allows access to
# individual objects via the API). Should be set to full web address
# where app is hosted, needs to end with a trailing slash. Example:
# APIS_BASE_URI = "https://my-project.subdomain.oeaw.ac.at/"

APIS_BASE_URI = "https://frischmuth-dev.acdh-dev.oeaw.ac.at/"

REDMINE_ID = ""

MAIN_TEXT_NAME = ""

APIS_RELATIONS_FILTER_EXCLUDE.append("annotation")

APIS_DEFAULT_COLLECTION = "manual"

APIS_LIST_VIEWS_ALLOWED = False  # toggle for making list views public

APIS_DETAIL_VIEWS_ALLOWED = False  # toggle for making detail views public

# Use APIS_ENTITIES to configure display settings and functionality for
# individual fields of any entity class in models.py.

APIS_ENTITIES = {}
