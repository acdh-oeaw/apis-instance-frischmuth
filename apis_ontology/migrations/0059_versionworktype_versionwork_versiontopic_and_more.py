# Generated by Django 4.2.13 on 2024-05-27 19:08

import apis_core.generic.abc
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("apis_ontology", "0058_worktype_icon_id"),
    ]

    operations = [
        migrations.CreateModel(
            name="VersionWorkType",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "name_plural",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Pluralform",
                    ),
                ),
                (
                    "icon_id",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Icon-Kennzeichnung",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionWork",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Feld für interne Notizen",
                        max_length=1024,
                        verbose_name="Notiz",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Titel"
                    ),
                ),
                (
                    "subtitle",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Untertitel",
                    ),
                ),
                (
                    "language",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("deu", "Deutsch"),
                            ("eng", "Englisch"),
                            ("fra", "Französisch"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Sprache",
                    ),
                ),
                (
                    "siglum",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=6,
                        null=True,
                        verbose_name="Sigle",
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Kurzzusammenfassung",
                        max_length=1024,
                        verbose_name="Teaser",
                    ),
                ),
                (
                    "text_analysis",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Fließtext",
                        verbose_name="Textanalyse",
                    ),
                ),
                (
                    "context",
                    models.TextField(
                        blank=True, default="", verbose_name="Entstehungskontext"
                    ),
                ),
                (
                    "historical_events",
                    models.TextField(
                        blank=True, default="", verbose_name="Historischer Kontext"
                    ),
                ),
                (
                    "temporal_order",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("chronological", "chronologisch"),
                            ("anachronic", "anachronisch"),
                            ("achronic", "achronisch"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Erzählordnung",
                    ),
                ),
                (
                    "temporal_duration",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("scene", "Szene"),
                            ("stretch", "Dehnung"),
                            ("summary", "Raffung"),
                            ("ellipsis", "Ellipse"),
                            ("pause", "Pause"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Dauer",
                    ),
                ),
                (
                    "temporal_frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("singulative", "singulativ"),
                            ("repetitive", "repetitiv"),
                            ("iterative", "iterativ"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Frequenz",
                    ),
                ),
                (
                    "figure_speech",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("direct_quotation", "direkt zitierend"),
                            ("direct_figure_speech", "autonome, direkte Figurenrede"),
                            ("direct_speech", "direkte Rede"),
                            ("indirect_speech", "indirekte Rede"),
                            ("narrated_monologue", "erlebte Rede"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Figurenrede",
                    ),
                ),
                (
                    "representation_of_thought",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("quoted_monologue", "Zitat"),
                            ("psycho_narration", "erzählter Monolog"),
                            ("autonomous_monologue", "autonomer Monolog"),
                            ("stream_of_consciousness", "Bewusstseinsstrom"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Darstellung von Gedanken",
                    ),
                ),
                (
                    "focalization",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("zero", "Nullfokalisierung"),
                            ("internal_variable", "interne Fokalisierung – variabel"),
                            ("internal_fixed", "interne Fokalisierung – fixiert"),
                            ("external", "externe Fokalisierung"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Fokalisierung",
                    ),
                ),
                (
                    "narrative_situation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("authorial", "auktorial"),
                            ("neutral", "neutral"),
                            ("figural", "personal"),
                            ("first-person", "Ich-Erzähler*in"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Erzählperspektive",
                    ),
                ),
                (
                    "narrative_chronology",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("prior", "früheres Erzählen"),
                            ("simultaneous", "gleichzeitiges Erzählen"),
                            ("subsequent", "späteres Erzählen"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Zeitpunkt des Erzählens",
                    ),
                ),
                (
                    "narrative_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("extra", "extradiegetisch"),
                            ("intra", "intradiegetisch"),
                            ("meta", "metadiegetisch"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Ort des Erzählens",
                    ),
                ),
                (
                    "narrative_voice",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("heterodiegetic", "heterodiegetisches Erzählen"),
                            (
                                "homodiegetic_uninvolved",
                                "homodiegetisches Erzählen – unbeteiligter Beobachter:in",
                            ),
                            (
                                "homodiegetic_participant",
                                "homodiegetisches Erzählen – beteiligter Beobachter:in",
                            ),
                            (
                                "homodiegetic_character",
                                "homodiegetisches Erzählen – Nebenfigur",
                            ),
                            (
                                "homodiegetic_protagonist",
                                "homodiegetisches Erzählen – Hauptfigur",
                            ),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Stellung des:der Erzähler:in zum Geschehen",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionTopic",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Feld für interne Notizen",
                        max_length=1024,
                        verbose_name="Notiz",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionResearchPerspective",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Feld für interne Notizen",
                        max_length=1024,
                        verbose_name="Notiz",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionPlace",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(blank=True, null=True, verbose_name="latitude"),
                ),
                (
                    "longitude",
                    models.FloatField(blank=True, null=True, verbose_name="longitude"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionPhysicalObject",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "vorlass_doc_reference",
                    models.CharField(
                        blank=True,
                        default="",
                        editable=False,
                        max_length=255,
                        verbose_name="Vorlassdokument-Referenz",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionPerson",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "forename",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Vorname"
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Nachname"
                    ),
                ),
                (
                    "fallback_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Namens-Ersatzfeld, falls weder Vor- noch Nachname eindeutig als solche festgelegt bzw. eingegeben werden können",
                        max_length=255,
                        verbose_name="Uneindeutiger Name",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionOrganisation",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, default="", max_length=255, verbose_name="Webseite"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionMetaCharacter",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionInterpretatem",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionExpression",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Feld für interne Notizen",
                        max_length=1024,
                        verbose_name="Notiz",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Titel"
                    ),
                ),
                (
                    "subtitle",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Untertitel",
                    ),
                ),
                (
                    "language",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("deu", "Deutsch"),
                            ("eng", "Englisch"),
                            ("fra", "Französisch"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Sprache",
                    ),
                ),
                (
                    "publication_date_iso_formatted",
                    models.DateField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Erscheinungsdatum (ISO-Format)",
                    ),
                ),
                (
                    "publication_date_manual_input",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Erlaubte Formatvariationen u.a. 1.1.1920, 12/2010, 1999-12-23,...",
                        verbose_name="Erscheinungsdatum (manuelle Eingabe)",
                    ),
                ),
                (
                    "isbn",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="ISBN"
                    ),
                ),
                (
                    "edition",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Bsp.: 1. Aufl., deutsche Erstausg.",
                        max_length=255,
                        verbose_name="Ausgabe (Print-/Druckausgabe)",
                    ),
                ),
                (
                    "volume",
                    models.CharField(
                        blank=True, default="", max_length=30, verbose_name="Band"
                    ),
                ),
                (
                    "issue",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Nummer/Kennung einer Ausgabe eines periodischen Mediums",
                        max_length=30,
                        verbose_name="Zeitungsnummer",
                    ),
                ),
                (
                    "page_count",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Seitenanzahl einer relevanten Manifestation",
                        null=True,
                        verbose_name="Seitenanzahl",
                    ),
                ),
                (
                    "relevant_pages",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text='Eingabe muss im Format "X-Y" erfolgen, z.B. 5-12',
                        verbose_name="Forschungsrelevante Seiten",
                    ),
                ),
                (
                    "edition_type",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("first_edition", "Erstausgabe"),
                            ("reference_edition", "Referenzausgabe"),
                        ],
                        default="",
                        help_text="Zur Markierung speziell relevanter Ausgaben",
                        max_length=255,
                        verbose_name="Ausgabetyp",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionDataSource",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Main identifier for the data source",
                        max_length=255,
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True,
                        help_text="Original name of the file that data originated from",
                        max_length=255,
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        blank=True,
                        help_text="File type or data format, e.g. PDF, Excel, CSV",
                        max_length=255,
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        help_text="Original author/creator of the data",
                        max_length=255,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        help_text="Publisher, distribution platform, data repository,...",
                        max_length=255,
                    ),
                ),
                (
                    "original_date",
                    models.DateField(
                        blank=True,
                        help_text="Date the data was created or made available",
                        null=True,
                    ),
                ),
                (
                    "added_date",
                    models.DateField(
                        blank=True,
                        help_text="Date the source was included in the project",
                        null=True,
                    ),
                ),
                (
                    "added_by",
                    models.CharField(
                        blank=True,
                        help_text="Person, user, script,... responsible for adding the data",
                        max_length=255,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionCharacter",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                (
                    "alternative_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Alternativer Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "forename",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Vorname"
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Nachname"
                    ),
                ),
                (
                    "fallback_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Namens-Ersatzfeld, falls weder Vor- noch Nachname eindeutig als solche festgelegt bzw. eingegeben werden können",
                        max_length=255,
                        verbose_name="Uneindeutiger Name",
                    ),
                ),
                (
                    "relevancy",
                    models.CharField(
                        choices=[
                            ("protagonist", "Hauptfigur"),
                            ("supporting_character", "Nebenfigur"),
                            ("referenced_character", "erwähnte Figur"),
                        ],
                        default="",
                        help_text="Bedeutsamkeit für den Text, Erzählfokus",
                        max_length=255,
                        verbose_name="Relevanz",
                    ),
                ),
                (
                    "fictionality",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("fictional_character", "fiktive Figur"),
                            ("historical_character", "historische Figur"),
                            ("mythical_character", "mythologische Figur"),
                        ],
                        default="",
                        help_text="Faktizität vs. Fiktionalität",
                        max_length=255,
                        verbose_name="Erfindungsgrad",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
        migrations.CreateModel(
            name="VersionArchive",
            fields=[
                (
                    "rootobject_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="apis_metainfo.rootobject",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "version_tag",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "progress_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("created", "neu angelegt"),
                            ("edited", "reine Datenänderung"),
                            ("verify_data", "dubios"),
                            ("worked_on", "in Bearbeitung"),
                            ("awaiting_review", "Review erbeten"),
                            ("reviewed", "Review abgeschlossen"),
                            ("approved", "für VÖ freigegeben"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Bearbeitungsstatus",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Beschreibung"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Anschrift"
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, default="", max_length=255, verbose_name="Webseite"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="apis_ontology.datasource",
                        verbose_name="Datenquelle",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "self_contenttype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version",
                "verbose_name_plural": "Versions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(
                simple_history.models.HistoricalChanges,
                models.Model,
                apis_core.generic.abc.GenericModel,
            ),
        ),
    ]
